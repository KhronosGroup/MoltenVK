#!/usr/bin/env bash
#
# Copyright (c) 2016-2018 The Brenwill Workshop Ltd.
#
# fetchDependencies - Retrieves the correct versions of all dependencies
#
# macOS usage: ./fetchDependencies [-sdk]
#
#   -sdk = Load for the LunarG SDK, using symlinks to repos in SDK instead of fetching
#          Vulkan-LoaderAndValidationLayers and glslang repositories.

set -e

# ----------------- Script path -----------------

pushd "$(dirname "${0}")" >/dev/null
script_path=$(pwd -P)
popd >/dev/null

# ----------------- Functions -------------------

# Clone a repository
# $1 repo name
# $2 repo url
# $3 repo revision (commit SHA)
# $? 0 if current repo revision == $3, else 1
clone_repo() {
	echo "$1 repo: $2"
	echo "$1 revision: $3"

	if [ -d "${script_path}/$1" ] && git -C "${script_path}/$1" rev-parse HEAD; then
		current_rev=$(git -C "${script_path}/$1" rev-parse HEAD)
		if [ $current_rev == $3 ]; then
			echo "Repo up to date"
			return 0
		else
			echo "Updating existing repo"
			git -C "${script_path}/$1" fetch --all
			git -C "${script_path}/$1" checkout $3
		fi
	else
		echo "Cloning repo"
		rm -rf ${script_path}/$1
		git clone $2 ${script_path}/$1
		cd ${script_path}/$1
		git checkout $3
		cd -
	fi
	return 1
}

# Build a repository
# $1 repo name
build_repo() {
	echo "Building $1"

	rm -rf ${script_path}/$1/build
	mkdir ${script_path}/$1/build
	cd ${script_path}/$1/build
	cmake ..
	make
	cd -
}


echo
echo Retrieving MoltenVK dependencies.
echo

V_LVL_NAME=Vulkan-LoaderAndValidationLayers
GLSLANG_NAME=glslang

# ----------------- SPIRV-Cross -------------------

REPO_NAME=SPIRV-Cross
REPO_URL="https://github.com/KhronosGroup/${REPO_NAME}.git"
REPO_REV=$(cat "${script_path}/${REPO_NAME}_repo_revision")

clone_repo ${REPO_NAME} ${REPO_URL} ${REPO_REV}


# ----------------- VulkanSamples -------------------

REPO_NAME=VulkanSamples
REPO_URL="https://github.com/brenwill/${REPO_NAME}.git"
REPO_REV=$(cat "${script_path}/${REPO_NAME}_repo_revision")

clone_repo ${REPO_NAME} ${REPO_URL} ${REPO_REV}


# ----------------- Vulkan-LoaderAndValidationLayers, glslang, SPIRV-Tools & SPIRV-Headers -------------------

# When MoltenVK is loaded as a dependency of the LunarG SDK, the LunarG SDK already
# has Vulkan-LoaderAndValidationLayers & glslang, so create simlinks instead.
if [ "$1" = "-sdk" ]; then

	REPO_NAME=${V_LVL_NAME}
	rm -rf ${script_path}/${REPO_NAME}
	ln -sfn ${script_path}/../../.. ${REPO_NAME}

	REPO_NAME=${GLSLANG_NAME}
	rm -rf ${script_path}/${REPO_NAME}
	ln -sfn ${script_path}/../../${REPO_NAME} ${REPO_NAME}

else

	# ----------------- Vulkan-LoaderAndValidationLayers -------------------

	REPO_NAME=${V_LVL_NAME}
	REPO_URL="https://github.com/KhronosGroup/${REPO_NAME}.git"
	REPO_REV=$(cat "${script_path}/${REPO_NAME}_repo_revision")

	clone_repo ${REPO_NAME} ${REPO_URL} ${REPO_REV}


	# ----------------- glslang, SPIRV-Tools & SPIRV-Headers ---------------

	REPO_NAME=${GLSLANG_NAME}
	REPO_URL=$(cat "${script_path}/${V_LVL_NAME}/external_revisions/glslang_giturl")
	REPO_REV=$(cat "${script_path}/${V_LVL_NAME}/external_revisions/glslang_revision")
	GLSLANG_BUILD_PATH="${script_path}/${GLSLANG_NAME}/build"

	if clone_repo ${REPO_NAME} ${REPO_URL} ${REPO_REV} \
		&& [ -f "${GLSLANG_BUILD_PATH}/glslang/libglslang.a" ] \
		&& [ -f "${GLSLANG_BUILD_PATH}/hlsl/libHLSL.a" ] \
		&& [ -f "${GLSLANG_BUILD_PATH}/OGLCompilersDLL/libOGLCompiler.a" ] \
		&& [ -f "${GLSLANG_BUILD_PATH}/SPIRV/libSPIRV.a" ] \
		&& [ -f "${GLSLANG_BUILD_PATH}/SPIRV/libSPVRemapper.a" ]
	then
		echo "glslang up to date"
	else
		echo "glslang not up to date"
		cd ${script_path}/${REPO_NAME}
		./update_glslang_sources.py
		cd -

		build_repo ${GLSLANG_NAME}
	fi

fi

